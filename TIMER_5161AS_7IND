// Пины для управления индикаторами
const int A = 8, B = 7, C = 6, D = 5, E = 4, F = 3, G = 2;
const int A1 = 12, B1 = 11, C1 = 10, D1 = 9, E1 = 8, F1 = 7, G1 = 6;
const int A2 = 18, B2 = 17, C2 = 16, D2 = 15, E2 = 14, F2 = 13, G2 = 12;

// Пины для подключения потенциометра и кнопки
const int potPin = A0;        // Пин для подключения потенциометра
const int buttonPin = 2;      // Пин для подключения кнопки

// Переменные
int potValue = 0;             // Значение с потенциометра
int timerDuration = 0;        // Продолжительность таймера в секундах
unsigned long startTime = 0;  // Время начала таймера
bool timerRunning = false;    // Флаг состояния таймера
bool ledBlinking = false;     // Флаг мигания светодиода
unsigned long blinkStartTime = 0; // Время начала мигания

// Массивы для отображения цифр на индикаторах
const byte digitSegments[10][7] = {
  {LOW, LOW, LOW, LOW, LOW, LOW, HIGH},  // 0
  {HIGH, LOW, LOW, HIGH, HIGH, HIGH, HIGH}, // 1
  {LOW, LOW, HIGH, LOW, LOW, HIGH, LOW},  // 2
  {LOW, LOW, LOW, LOW, HIGH, HIGH, LOW},  // 3
  {HIGH, LOW, LOW, HIGH, HIGH, LOW, LOW}, // 4
  {LOW, HIGH, LOW, LOW, HIGH, LOW, LOW},  // 5
  {LOW, HIGH, LOW, LOW, LOW, LOW, LOW},  // 6
  {LOW, LOW, LOW, HIGH, HIGH, HIGH, HIGH}, // 7
  {LOW, LOW, LOW, LOW, LOW, LOW, LOW},  // 8
  {LOW, LOW, LOW, LOW, HIGH, LOW, LOW}   // 9
};

void setup() {
  // Настройка пинов для индикаторов
  pinMode(A, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(D, OUTPUT);
  pinMode(E, OUTPUT);
  pinMode(F, OUTPUT);
  pinMode(G, OUTPUT);

  pinMode(A1, OUTPUT);
  pinMode(B1, OUTPUT);
  pinMode(C1, OUTPUT);
  pinMode(D1, OUTPUT);
  pinMode(E1, OUTPUT);
  pinMode(F1, OUTPUT);
  pinMode(G1, OUTPUT);

  pinMode(A2, OUTPUT);
  pinMode(B2, OUTPUT);
  pinMode(C2, OUTPUT);
  pinMode(D2, OUTPUT);
  pinMode(E2, OUTPUT);
  pinMode(F2, OUTPUT);
  pinMode(G2, OUTPUT);

  // Настройка пинов для кнопки
  pinMode(buttonPin, INPUT_PULLUP);

  Serial.begin(9600); // Инициализация последовательного порта для отладки
}

void loop() {
  // Чтение значения с потенциометра
  potValue = analogRead(potPin);
  
  // Преобразование значения в диапазон времени (например, от 1 до 30 минут)
  timerDuration = map(potValue, 0, 1023, 60, 1800);

  // Проверка нажатия кнопки
  if (digitalRead(buttonPin) == LOW) {
    delay(50); // Задержка для устранения дребезга
    if (digitalRead(buttonPin) == LOW) { // Проверка повторно после задержки
      startTime = millis(); // Запоминаем время начала
      timerRunning = true;  // Устанавливаем флаг запущенного таймера
      ledBlinking = false;  // Сбрасываем флаг мигания светодиода
      Serial.print("Таймер запущен на ");
      Serial.print(timerDuration / 60);
      Serial.println(" минут.");
    }
  }

  // Если таймер запущен
  if (timerRunning) {
    unsigned long currentTime = millis();
    unsigned long elapsedTime = (currentTime - startTime) / 1000; // Время в секундах

    // Если истекло время таймера
    if (elapsedTime >= timerDuration) {
      Serial.println("Таймер завершен!");
      timerRunning = false;       // Сбрасываем флаг запущенного таймера
      ledBlinking = true;         // Устанавливаем флаг мигания светодиода
      blinkStartTime = currentTime; // Запоминаем время начала мигания
    } else {
      int minutes = (timerDuration - elapsedTime) / 60;
      int seconds = (timerDuration - elapsedTime) % 60;
      int tensOfSeconds = seconds / 10;

      displayNumber(minutes / 10, A, B, C, D, E, F, G); // Десятки минут
      displayNumber(minutes % 10, A1, B1, C1, D1, E1, F1, G1); // Единицы минут
      displayNumber(tensOfSeconds, A2, B2, C2, D2, E2, F2, G2); // Десятки секунд

      Serial.print("Осталось: ");
      Serial.print(minutes);
      Serial.print(" минут ");
      Serial.print(seconds);
      Serial.println(" сек.");
    }
  }

  // Мигание светодиода
  if (ledBlinking) {
    unsigned long currentTime = millis();
    unsigned long blinkElapsedTime = (currentTime - blinkStartTime) / 1000; // Время в секундах

    // Мигаем каждые 2 секунды
    if (blinkElapsedTime % 4 < 2) {
      digitalWrite(A, HIGH); // Включаем светодиод
      digitalWrite(A1, HIGH);
      digitalWrite(A2, HIGH);
    } else {
      digitalWrite(A, LOW); // Выключаем светодиод
      digitalWrite(A1, LOW);
      digitalWrite(A2, LOW);
    }
  }
}

void displayNumber(int number, int a, int b, int c, int d, int e, int f, int g) {
  for (int i = 0; i < 7; i++) {
    digitalWrite(a, digitSegments[number][0]);
    digitalWrite(b, digitSegments[number][1]);
    digitalWrite(c, digitSegments[number][2]);
    digitalWrite(d, digitSegments[number][3]);
    digitalWrite(e, digitSegments[number][4]);
    digitalWrite(f, digitSegments[number][5]);
    digitalWrite(g, digitSegments[number][6]);
  }
}
